{"version":3,"sources":["component/CustomButton/CustomButton.js","component/CustomButton/CustomButton.style.js","component/Input/Input.js","component/Input/Input.style.js","component/RadioInput/RadioInput.js","container/Form.js","container/Form.style.js","App.js","reportWebVitals.js","index.js"],"names":["withStyles","button","position","margin","backgroundColor","width","borderRadius","marginTop","color","classes","Button","className","variant","type","input","marginBottom","inputtype","inputlabel","value","onChange","name","placeholder","error","helperText","TextField","id","label","RadioInput","FormControl","component","FormLabel","RadioGroup","aria-label","style","display","FormControlLabel","control","Radio","container","padding","root","alignItems","icon","form","flexDirection","headstyle","fontWeight","validationSchema","yup","fname","matches","required","lname","email","age","positive","gender","formik","useFormik","initialValues","onSubmit","values","alert","JSON","stringify","Grid","item","lg","xs","Paper","align","Avatar","handleSubmit","Input","handleChange","Boolean","errors","touched","App","Form","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dd6d031.chunk.js","sourcesContent":["import { withStyles } from '@material-ui/styles';\r\nimport {styles} from './CustomButton.style';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst CustomButton = ({classes}) => {\r\n    return ( \r\n        <Button className={classes.button} variant=\"contained\" type=\"submit\">Submit</Button>\r\n     );\r\n}\r\n \r\nexport default withStyles(styles)(CustomButton);","\r\nconst styles = ({\r\n    button: {\r\n      position: \"relative\",\r\n      margin: \"auto\",\r\n      backgroundColor: \"#7331cf\",\r\n      width: \"35%\",\r\n      borderRadius: \"20px\",\r\n      marginTop: \"12px\",\r\n      color: \"white\",\r\n      }\r\n    }\r\n);\r\n\r\nexport {\r\n    styles\r\n};","import { withStyles } from '@material-ui/styles';\r\nimport {styles} from './Input.style';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst InputField = ({classes, inputtype, inputlabel, value, onChange, name, placeholder, error, helperText }) => {\r\n    return ( \r\n        \r\n        <TextField id=\"standard-basic\" type={inputtype} name={name} label={inputlabel} placeholder={placeholder} className={classes.input} value={value} onChange={onChange} error={error} helperText={helperText} />\r\n\r\n      \r\n        \r\n     );\r\n}\r\n \r\nexport default withStyles(styles)(InputField);","const styles = ({\r\n    input: {\r\n        marginBottom: \"18px\",      \r\n      }\r\n    }\r\n);\r\n\r\nexport {\r\n    styles\r\n};","import Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst RadioInput = ({onChange, error, helperText}) => {\r\n    return ( \r\n        <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\">Gender</FormLabel>\r\n                            <RadioGroup aria-label=\"gender\" name=\"gender1\" style={{display:'initial'}} onChange={onChange} error={error} helperText={helperText} >\r\n                                <FormControlLabel value=\"female\" name=\"gender\" control={<Radio />} label=\"Female\" />\r\n                                <FormControlLabel value=\"male\" name=\"gender\" control={<Radio />} label=\"Male\" />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n     );\r\n}\r\n \r\nexport default RadioInput;","import { withStyles } from '@material-ui/styles';\r\nimport { Grid, Paper, Avatar } from '@material-ui/core';\r\nimport { styles } from './Form.style';\r\nimport CustomButton from '../component/CustomButton/CustomButton';\r\nimport InputField from '../component/Input/Input';\r\nimport { useFormik } from 'formik';\r\nimport RadioInput from '../component/RadioInput/RadioInput';\r\nimport * as yup from 'yup';\r\n\r\n\r\n\r\nconst FormContainer = ({ classes }) => {\r\n    const validationSchema = yup.object({\r\n        fname: yup\r\n            .string('Enter your First Name')\r\n            .matches(/^[a-zA-Z]+$/, 'Enter a valid name')\r\n            .required('First Name is required'),\r\n        lname: yup\r\n            .string('Enter your First Name')\r\n            .matches(/^[a-zA-Z]+$/, 'Enter a valid name')\r\n            .required('Name is required'),\r\n        email: yup\r\n            .string('Enter your email')\r\n            .email('Enter a valid email')\r\n            .required('Email is required'),\r\n        age: yup\r\n            .number('Enter your age')\r\n            .positive('age must be greater than zero')\r\n            .required('Password is required'),\r\n        gender: yup\r\n        .string()\r\n        .required(\"A radio option is required\")\r\n\r\n    });\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            fname: '',\r\n            lname: '',\r\n            email: '',\r\n            age: '',\r\n            gender: ''\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            alert(JSON.stringify(values, null, 2));\r\n        },\r\n    });\r\n\r\n    return (\r\n\r\n        <Grid item lg={4} xs={12} className={classes.container}>\r\n            <Paper className={classes.root}>\r\n                <Grid align=\"center\">\r\n                    <Avatar className={classes.icon}></Avatar>\r\n                    <h3 className={classes.headstyle}>EMPLOYEE FORM</h3>\r\n                </Grid>\r\n\r\n\r\n                <form onSubmit={formik.handleSubmit} className={classes.form}>\r\n\r\n                    <InputField inputtype=\"text\" inputlabel=\"First Name\"\r\n                        placeholder=\"Enter Your First Name\"\r\n                        name=\"fname\"\r\n                        value={formik.values.fname}\r\n                        onChange={formik.handleChange}\r\n                        error={Boolean(formik.errors.fname)}\r\n                        helperText={formik.errors.fname}>\r\n\r\n                    </InputField>\r\n\r\n\r\n                    <InputField inputtype=\"text\" inputlabel=\"Second Name\"\r\n                        placeholder=\"Enter Your Second Name\"\r\n                        name=\"lname\"\r\n                        value={formik.values.lname}\r\n                        onChange={formik.handleChange}\r\n                        error={Boolean(formik.errors.lname)}\r\n                        helperText={formik.errors.lname}\r\n                    ></InputField>\r\n\r\n\r\n\r\n                    <InputField inputtype=\"email\" inputlabel=\"Your Email\"\r\n                        placeholder=\"Enter Your Email\"\r\n                        name=\"email\"\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange}\r\n                        error={Boolean(formik.errors.email)}\r\n                        helperText={formik.errors.email}\r\n                    ></InputField>\r\n\r\n\r\n\r\n                    <InputField inputtype=\"age\" inputlabel=\"Your Age\"\r\n                        placeholder=\"Enter Your Age\"\r\n                        name=\"age\"\r\n                        value={formik.values.age}\r\n                        onChange={formik.handleChange}\r\n                        error={Boolean(formik.errors.age)}\r\n                        helperText={formik.errors.age}\r\n                    ></InputField>\r\n\r\n                    <RadioInput onChange={formik.handleChange}\r\n                    error={Boolean(formik.errors.gender)}\r\n                    helperText={formik.errors.gender} \r\n                    touched={formik.touched.gender}\r\n                    />\r\n\r\n\r\n\r\n\r\n                    <CustomButton />\r\n\r\n\r\n\r\n\r\n                </form>\r\n\r\n\r\n\r\n            </Paper>\r\n\r\n        </Grid>\r\n\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(FormContainer);","\r\nconst styles = ({\r\n  container: {\r\n    margin: \"auto\",\r\n    padding: \"10px\",\r\n  },\r\n  root: {\r\n    position: \"relative\",\r\n    margin: \"20px auto\",\r\n    padding: \"30px\",\r\n    borderRadius: \"8px\",\r\n    alignItems: \"center\",\r\n    // boxShadow: \"0 5px 5px gray\"\r\n  },\r\n  icon: {\r\n    backgroundColor: \"#7331cf\"\r\n\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n  },\r\n  headstyle: {\r\n    color: \"#7331cf\",\r\n    fontWeight: \"600\"\r\n    // fontFamily: '\"Helvetica Neue\"',\r\n\r\n  }\r\n\r\n}\r\n);\r\n\r\nexport {\r\n  styles\r\n};","import FormContainer from './container/Form';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FormContainer/>\n     \n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}